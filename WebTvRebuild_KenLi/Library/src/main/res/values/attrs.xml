<?xml version="1.0" encoding="utf-8"?>
<!--
    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.

    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
    copy, modify, and distribute this software in source code or binary form for use
    in connection with the web services and APIs provided by Facebook.

    As with any software that integrates with the Facebook platform, your use of
    this software is subject to the Facebook Developer Principles and Policies
    [http://developers.facebook.com/policy/]. This copyright notice shall be
    included in all copies or substantial portions of the software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-->

<resources>
    <declare-styleable name="com_facebook_login_view">
        <attr name="com_facebook_confirm_logout" format="boolean"/>
        <attr name="com_facebook_login_text" format="string"/>
        <attr name="com_facebook_logout_text" format="string"/>
        <attr name="com_facebook_tooltip_mode">
            <!-- Keep in sync with Enums in LoginButton -->
            <enum name="automatic" value="0" />
            <enum name="display_always" value="1" />
            <enum name="never_display" value="2" />
        </attr>
    </declare-styleable>
    <declare-styleable name="com_facebook_profile_picture_view">
        <attr name="com_facebook_preset_size">
            <!-- Keep in sync with constants in ProfilePictureView -->
            <enum name="small" value="-2" />
            <enum name="normal" value="-3" />
            <enum name="large" value="-4" />
        </attr>
        <attr name="com_facebook_is_cropped" format="boolean" />
    </declare-styleable>
    <declare-styleable name="com_facebook_like_view">
        <attr name="com_facebook_foreground_color" format="color" />
        <attr name="com_facebook_object_id" format="string" />
        <attr name="com_facebook_object_type">
            <!-- Keep in sync with Enums in Likeview -->
            <enum name="unknown" value="0" />
            <enum name="open_graph" value="1" />
            <enum name="page" value="2" />
        </attr>
        <attr name="com_facebook_style">
            <!-- Keep in sync with Enums in LikeView -->
            <enum name="standard" value="0" />
            <enum name="button" value="1" />
            <enum name="box_count" value="2" />
        </attr>
        <attr name="com_facebook_auxiliary_view_position">
            <!-- Keep in sync with Enums in LikeView -->
            <enum name="bottom" value="0" />
            <enum name="inline" value="1" />
            <enum name="top" value="2" />
        </attr>
        <attr name="com_facebook_horizontal_alignment">
            <!-- Keep in sync with Enums in LikeView -->
            <enum name="center" value="0" />
            <enum name="left" value="1" />
            <enum name="right" value="2" />
        </attr>
    </declare-styleable>
    
    <declare-styleable name="SlidingMenu">
        <attr name="mode">
            <enum name="left" value="0" />
            <enum name="right" value="1" />
        </attr>
        <attr name="viewAbove" format="reference" />
        <attr name="viewBehind" format="reference" />
        <attr name="behindOffset" format="dimension" />
        <attr name="behindWidth" format="dimension" />
        <attr name="behindScrollScale" format="float" />
        <attr name="touchModeAbove">
            <enum name="margin" value="0" />
            <enum name="fullscreen" value="1" />
        </attr>
        <attr name="touchModeBehind">
            <enum name="margin" value="0" />
            <enum name="fullscreen" value="1" />
        </attr>
        <attr name="shadowDrawable" format="reference" />
        <attr name="shadowWidth" format="dimension" />
        <attr name="fadeEnabled" format="boolean" />
        <attr name="fadeDegree" format="float" />
        <attr name="selectorEnabled" format="boolean" />
        <attr name="selectorDrawable" format="reference" />
    </declare-styleable>
    
    <declare-styleable name="PullToRefresh">

        <!-- A drawable to use as the background of the Refreshable View -->
        <attr name="ptrRefreshableViewBackground" format="reference|color" />

        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
        <attr name="ptrHeaderBackground" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views -->
        <attr name="ptrHeaderTextColor" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
        <attr name="ptrHeaderSubTextColor" format="reference|color" />

        <!-- Mode of Pull-to-Refresh that should be used -->
        <attr name="ptrMode">
            <flag name="disabled" value="0x0" />
            <flag name="pullFromStart" value="0x1" />
            <flag name="pullFromEnd" value="0x2" />
            <flag name="both" value="0x3" />
            <flag name="manualOnly" value="0x4" />

            <!-- These last two are depreacted -->
            <flag name="pullDownFromTop" value="0x1" />
            <flag name="pullUpFromBottom" value="0x2" />
        </attr>

        <!-- Whether the Indicator overlay(s) should be used -->
        <attr name="ptrShowIndicator" format="reference|boolean" />

        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
        <attr name="ptrDrawable" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableStart" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableEnd" format="reference" />

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="ptrOverScroll" format="reference|boolean" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
        <attr name="ptrHeaderTextAppearance" format="reference" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
        <attr name="ptrSubHeaderTextAppearance" format="reference" />

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0" />
            <flag name="flip" value="0x1" />
        </attr>

        <!-- Whether the user can scroll while the View is Refreshing -->
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />

        <!--
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be 
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.
        -->
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        -->
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
    </declare-styleable>
    
    <declare-styleable name="searchBox">   
        <attr name="text" format="string"/>
        <attr name="hint" format="string"/>
		<attr name="textColor" format="color"/>   
		<attr name="textSize" format="dimension"/>   
	</declare-styleable>  
	
	<attr name="switchStyle" format="reference" />
    <declare-styleable name="Switch">
	    <attr name="textLeft" format="string"/>
	    <attr name="textRight" format="string"/>
	    <attr name="switchMinWidth" format="dimension" />
	    <attr name="switchPadding" format="dimension" />	    
	    <attr name="colorUnChecked" format="color" />	    
	    <attr name="colorChecked" format="color" />	    
	    <attr name="backgroundDrawable" format="reference" />	    
	    <attr name="switchDrawable" format="dimension" />
	    <attr name="innerPadding" format="dimension" />	   
	    <attr name="isChecked" format="boolean" />	
	</declare-styleable>
	
    <declare-styleable name="SwitchButton">
	    <attr name="bottomDrawable" format="reference" />
	    <attr name="pressedDrawable" format="reference" />
	    <attr name="normalDrawable" format="reference" />
	    <attr name="frameDrawable" format="reference" />
	    <attr name="maskDrawable" format="reference" />
	</declare-styleable>
	
    <declare-styleable name="ImageView">  
        <attr name="fitWidth" format="boolean" />  
        <attr name="fitHeight" format="boolean" />
        <attr name="centerCrop" format="boolean" />
        <attr name="aspectRatio" format="float" />
        <attr name="imageDefault" format="reference" />    
        <attr name="imageLoading" format="reference" /> 
        <attr name="roundRadius" format="dimension" />
    </declare-styleable>
    <declare-styleable name="ImageViewBanner">  
        <attr name="dotNormal" format="reference" />    
        <attr name="dotFocus" format="reference" />
    </declare-styleable>    
</resources>
